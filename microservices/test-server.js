// Simple test server to simulate microservices API Gateway
const express = require('express');
const cors = require('cors');
const app = express();

// Enable CORS for all routes
app.use(cors());
app.use(express.json());

// Simulate the Form Generation Service response
app.post('/form-generation/api/form/generate', (req, res) => {
  console.log('📝 Form Generation Service called with:', req.body);
  
  const { text } = req.body;
  const textLower = text.toLowerCase();
  
  let intent = 'contact';
  let title = 'Contact Form';
  let fields = [];
  
  // Simple intent detection (similar to our mock but processed by "microservice")
  if (textLower.includes('flight') || textLower.includes('book') || textLower.includes('travel')) {
    intent = 'bookflight';
    title = 'Flight Booking';
    fields = [
      { name: 'departure', label: 'Departure City', type: 'text', required: true, placeholder: 'Enter departure city', value: '' },
      { name: 'destination', label: 'Destination City', type: 'text', required: true, placeholder: 'Enter destination city', value: '' },
      { name: 'departureDate', label: 'Departure Date', type: 'date', required: true, value: '' },
      { name: 'passengers', label: 'Number of Passengers', type: 'number', required: true, placeholder: '1', value: '1' },
      { name: 'class', label: 'Travel Class', type: 'select', required: true, options: ['Economy', 'Business', 'First Class'], value: 'Economy' }
    ];
  } else if (textLower.includes('hotel') || textLower.includes('room') || textLower.includes('reservation')) {
    intent = 'hotelreservation';
    title = 'Hotel Reservation';
    fields = [
      { name: 'city', label: 'City', type: 'text', required: true, placeholder: 'Enter city', value: '' },
      { name: 'checkIn', label: 'Check-in Date', type: 'date', required: true, value: '' },
      { name: 'checkOut', label: 'Check-out Date', type: 'date', required: true, value: '' },
      { name: 'guests', label: 'Number of Guests', type: 'number', required: true, value: '1' },
      { name: 'roomType', label: 'Room Type', type: 'select', required: true, options: ['Standard', 'Deluxe', 'Suite'], value: 'Standard' }
    ];
  } else {
    // Default contact form
    fields = [
      { name: 'name', label: 'Full Name', type: 'text', required: true, placeholder: 'Enter your full name', value: '' },
      { name: 'email', label: 'Email Address', type: 'email', required: true, placeholder: 'Enter your email', value: '' },
      { name: 'message', label: 'Message', type: 'textarea', required: true, placeholder: 'Enter your message', value: text }
    ];
  }
  
  const form = {
    formId: Math.random().toString(36).substr(2, 9),
    title,
    intent,
    fields,
    submitUrl: '/form-submission/api/form/submit',
    submitButtonText: 'Submit'
  };
  
  // Simulate microservice processing delay
  setTimeout(() => {
    console.log('✅ Form generated by microservice:', { formId: form.formId, intent, fieldCount: fields.length });
    res.json(form);
  }, 800);
});

// Simulate the Form Submission Service response
app.post('/form-submission/api/form/submit', (req, res) => {
  console.log('📤 Form Submission Service called with:', req.body);
  
  const { formId } = req.body;
  
  // Simulate form processing delay
  setTimeout(() => {
    console.log('✅ Form submitted by microservice:', formId);
    res.json({
      success: true,
      message: 'Form submitted successfully via microservices!',
      formId,
      submittedAt: new Date().toISOString(),
      processedBy: 'FormSubmission Microservice'
    });
  }, 500);
});

// Health check endpoint
app.get('/health', (req, res) => {
  res.json({ 
    status: 'healthy', 
    services: {
      'api-gateway': 'running',
      'form-generation-service': 'running',
      'form-submission-service': 'running',
      'text-analysis-service': 'simulated',
      'notification-service': 'simulated'
    },
    timestamp: new Date().toISOString()
  });
});

const PORT = 7000;
app.listen(PORT, () => {
  console.log(`🚀 Microservices API Gateway simulation running on http://localhost:${PORT}`);
  console.log(`📋 Available endpoints:`);
  console.log(`   POST /form-generation/api/form/generate - Generate forms`);
  console.log(`   POST /form-submission/api/form/submit - Submit forms`);
  console.log(`   GET  /health - Health check`);
  console.log(`\n🔗 Frontend should be running on http://localhost:5173`);
  console.log(`🎯 Test the integration between React frontend and microservices backend!`);
});